# -*- coding: utf-8 -*-
"""HousePricePrediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FZJnvHPOCeqygUcJnGZugsHpibLsaBNK

# House Price Prediction Using Reggresion and Random Forest

# Data Preproccesing
"""

# Import Libraries
import numpy as np
import pandas as pd 
import seaborn as sns
import matplotlib.pyplot as plt

# Data Preprocess
data = pd.read_csv("./housing.csv")

# Drop Nan values from Dataset
data = data.dropna()

data.ocean_proximity.value_counts()

# One-Hot-encoding
data = data.join(pd.get_dummies(data.ocean_proximity)).drop('ocean_proximity', axis = 1)
data

# Feature Engineering
data['bedroom_per_room'] = data['total_bedrooms'] / data['total_rooms']
data

data.hist(figsize = (17,8))

# Normalize some features' distributions
data['total_rooms'] = np.log(data['total_rooms'] + 1)
data['total_bedrooms'] = np.log(data['total_bedrooms'] + 1)
data['population'] = np.log(data['population'] + 1)
data['households'] = np.log(data['households'] + 1)
data.hist(figsize = (15,8))

# Visualize the correlation Between features
plt.figure(figsize=(15,8))
sns.heatmap(data.corr(), annot = True, cmap = "YlGnBu")

Y = data['median_house_value']
X = data.drop('median_house_value', axis = 1)

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2)

"""# Create Model and Scoring them"""

# Create the First Model
from sklearn.linear_model import LinearRegression
LR = LinearRegression()
LR = LR.fit(X_train, Y_train)
First_Model = LR.score(X_test, Y_test)
print('With using Linear Regression, Score is: ', First_Model)

# Create the Second Model
from sklearn.ensemble import RandomForestRegressor
RFR = RandomForestRegressor()
RFR.fit(X_train, Y_train)
Second_Model = RFR.score(X_test, Y_test)
print('With using Random Forest, Score is: ', Second_Model)